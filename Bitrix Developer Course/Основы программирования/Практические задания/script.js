// В интернет-магазине у зарегистрированного пользователя есть имя и бонусный баланс. Интернет-магазином давно пользуется Лев Толстой. Отобразите ему информацию об успешном входе и его балансе.
let username = "LeoTolstoy";
let bonusBalance = "131";
console.log(`Пользователь ${username}`);
console.log(`Баланс ${bonusBalance}`);

// За каждую покупку мы добавляем на баланс фиксированную сумму в 50 бонусных баллов. Баллы сгорают со временем — каждый день сгорает три балла. Посчитайте, какой баланс будет у Льва Толстого через 10 дней, если обычно он делает покупку раз в два дня.
let bonusBalance = 131;
let addPoints = 50;
let deletePoints = 3;
bonusBalance += addPoints * 10 / 2 - deletePoints * 10;
console.log("Баланс " + bonusBalance);

// Сегодня мы объявили акцию — можно потратить все бонусные баллы на покупку пастилы, килограмм которой стоит 80 рублей. Покупать можно только целые килограммы пастилы. Какое максимальное количество килограммов может купить Лев Толстой на свои бонусы?
let bonusBalance = 351;
let priceProduct = 80;
let resultRemains = bonusBalance/priceProduct;
console.log(`Вес - ${Math.round(resultRemains)} кг.`);

// Рядом с именем пользователя в интернет-магазине отображается пометка. Она зависит от типа пользователя и его бонусного баланса. Обратите внимание: лейбл с пометкой должен быть только один. Например, если нам подходит и «Администратор», и «Вип-клиент», то нужно печатать тот, который подошёл первым — сначала проверка по имени, потом по репутации.
let userName = 'alex';
let userBalance = 5699;

if (userName === 'admin') {
  console.log('Администратор');
} else if (userName == false) {
  console.log('Гость');
} else if (userBalance > 5000) {
  console.log('Вип-клиент');
} else if (userBalance > 1000) {
  console.log('Постоянный покупатель');
}

// Ведущий разработчик поручил вам написать проверку, может ли пользователь изменить свой заказ. Если пользователь может редактировать сообщение, то нужно напечатать фразу Редактирование разрешено. В противном случае напечатать фразу Заказ нельзя редактировать.
let user;
let orderOwner;

user = 'netologist';
orderOwner = 'leo';

if (user === 'admin' || user === orderOwner) {
  console.log('Редактирование разрешено');
} else {
  console.log('Заказ нельзя редактировать');
}

// Мы решили изменить бонусную систему. Теперь покупатель получает бонусные баллы в зависимости от размера бонусного баланса и того, как часто он совершает покупки. Обычно мы начисляем 10 % от суммы покупки на бонусный счёт, но если у клиента на счету больше 5000 бонусных баллов, то начисляем 20 % от суммы. Дополнительно мы добавляем 5 % к начислению, если это не первая покупка в этом месяце.
let bonusBalance;
let purchasesMonth;
let standardAccrual;
let increasedAccrual;
let frequentPurchase;

bonusBalance = 500; // бонусный баланс
purchasesMonth = 1; // кол-во покупок в этом месяце
standardAccrual = 10; // стандартный размера начисления
increasedAccrual = 20; // повышеный размера начисления
frequentPurchase = 5; // добавки за частые покупки

let resultPercent = 0; // итоговый процент

resultPercent += bonusBalance >= 5000 ? increasedAccrual : standardAccrual;

if (purchasesMonth >= 1) {
  resultPercent += frequentPurchase;
}

console.log(`Процент от покупки: ${resultPercent}`);

// Когда пользователь помещает товар в корзину, мы должны показать эту информацию на странице товара.
let product = 'Печенье «Юбилейное», 1 кг';
let inBasket = true;
let quantity = 5;

if (inBasket) {
  console.log(`${quantity} x ${product}`);
}

// Вам поступила задача отобразить статус аккаунта пользователя в интернет-магазине. Чем чаще клиент покупает, тем выше его статус и больше процент кэшбека на бонусный счёт. Обычные пользователи (regular) получают 10 % от суммы покупок, улучшенные (extended) — 15 %, премиум (premium) — 20 %, а вип (vip) — 30 %.
let accountStatus = 'vip';
let username = 'alex';
let cashbackPercentage;

if (accountStatus === 'extended') {
  cashbackPercentage = 15;
} else if (accountStatus === 'premium') {
  cashbackPercentage = 20;
} else if (accountStatus === 'vip') {
  cashbackPercentage = 30;
} else {
  cashbackPercentage = 10;
}

console.log(
  `${username} | ${accountStatus} аккаунт\nВы получаете ${cashbackPercentage} % с покупок на бонусный счёт`
);

// Новую версию интернет-магазина запускали в пятницу ночью и сделали много ошибок. Найдите ошибки в коде и исправьте их.
let user = 'Killer2001';
if (user === 'admin') {
  console.log('Привет, админ!\nПроверь нет ли жалоб от пользователей!');
} else {
  console.log('Здравствуйте ' + user + '! У нас новые поступления халвы!');
}

let newOrders = 6;
let errorOrders = 3;

if (newOrders > errorOrders) {
  console.log('В магазине ' + newOrders +' новых заказов (с ошибкой: ' + errorOrders +')');
} else if (newOrders <= errorOrders) {
  console.log('ВНИМАНИЕ! Что-то идет не так! Все новые заказы завершились ошибкой!');
}

// Пользователь отправляет сообщения в мессенджер, и нам нужно где-то их хранить. Для этого создайте массив и сохраните в нём сообщения в том порядке, в котором они приведены.
let array = ["Привет! Есть ли новости?", ":)" ,"Начал работать над заданием.", "Ленюсь.", "Но дело движется."];
console.log(array);

// Пользователь написал сообщение «Готово». Нам нужно добавить это сообщение в список сообщений. Дальше пользователь отредактировал сообщение «Ленюсь» на «Стараюсь», затем удалил сообщение «:)». Эти изменения нужно отразить в исходном массиве. Добавьте сообщение «Готово» в конец массива из задания “Сообщения в чате”. Отредактируйте сообщение «Ленюсь» на «Стараюсь». Удалите сообщение «:)» из массива. Напечатайте массив в консоль.
let array = ["Привет! Есть ли новости?", ":)" ,"Начал работать над заданием.", "Ленюсь.", "Но дело движется."];
array.push("Готово");
array.splice(array.indexOf("Ленюсь."), 1, "Стараюсь");
array.splice(array.indexOf(":)"), 1);
console.log(array);

// В задании “Модерация чата” мы удалили запись по индексу, но программа должна работать автоматически. Для этого программе нужно находить индекс удаляемого сообщения самостоятельно. Запишите сообщение, которое желает удалить пользователь, в переменную и найдите индекс сообщения. Если сообщение нашлось, удалите его.
let message = "Привет! Есть ли новости?";
let array = ["Привет! Есть ли новости?", ":)" ,"Начал работать над заданием.", "Ленюсь.", "Но дело движется."];
if(array.indexOf(message) != -1){
    array.splice(array.indexOf(message), 1);
}
console.log(array);

// Пользователь обменивается сообщениями в чате с Мисс Марпл. Первое сообщение отправляет Мисс Марпл, второе — пользователь, и так далее. Выведите беседу таким образом, чтобы сверху были самые старые сообщения, а ниже — новые.
let messages = ["Я принесла тебе утренний чай. Обычно ты еще спишь.", "Вы приносите мне чай по утрам?", "А ты как думаешь, откуда он берётся?", "Не знаю. Я думал, это само собой разумеющееся."];
for(let i = 0; i < messages.length; i++){
    if(i % 2 === 0){
        console.log("Мисс Марпл: " + messages[i]);
    } else {
        console.log("Вы: " + messages[i]);
    }
}

// Нужно добавить функцию поиска по тексту сообщений в нашем мессенджере. Например, пользователь ищет слово «думаешь», и ему отображаются все сообщения с таким текстом.
let searchWord = "чай";
let messages = ["Я принесла тебе утренний чай. Обычно ты еще спишь.", "Вы приносите мне чай по утрам?", "А ты как думаешь, откуда он берётся?", "Не знаю. Я думал, это само собой разумеющееся."];
for(let i = 0; i < messages.length; i++){
    if(messages[i].includes(searchWord)){
        console.log(messages[i]);
    }
}

// Пользователи не всегда пишут друг другу сообщения по порядку. Но наш мессенджер пока не умеет обрабатывать ситуации, когда нам подряд прислал несколько сообщений один пользователь. Для этого массив сообщений messages придётся расширить. Вместо строк в этом массиве мы будем хранить маленькие вложенные массивы. На первом месте в них будет автор, на втором — сообщение: [автор, сообщение].
let messages = [
    ["‘zloy-zloy’", "‘Мы с Алёшей сегодня на иксбоксе рубились, потом в маке поели, потом ему новый телефон купили, и два часа с горок в Нескучном саду катались.’"],
    ["‘zloy-zloy’", "‘У Алёши завтра День рождения.’"],
    ["‘zloy-zloy’", "‘Он мой дед. Ему будет 81 год.’"],
    ["‘Вы’", "‘LOL.’"]
];

for(let message of messages){
    for(let i = 1; i < message.length; i++){
        console.log(message[i - 1].replace(/‘|’/g, '') + ": " + message[i].replace(/‘|’/g, ''));
    }
}

// Мы храним много информации о пользователе в различных переменных. Нужно помнить их названия, чтобы получать те или иные данные, а это неудобно. Давайте создадим ассоциативный массив user, в котором будем хранить информацию: имя пользователя, логин, репутацию, общее количество сообщений.
let user = {
    name: 'Лев Толстой',
    login: 'leo_tolstoy',
    reputation: 97,
    total: 900
}

console.log(`${user.name}, репутация ${user.reputation}, сообщений ${user.total}`);

// В прошлом домашнем задании мы создали массив сообщений в чате. Этот массив состоял из вложенных массивов. Для печати нам нужно помнить, что под индексом 0 хранится автор, а под индексом 1 — текст сообщения. Это неудобно. Создайте новый массив, который будет состоять из объектов-сообщений с ключами author и text.
let messages = [
  ["zloy-zloy", "Мы с Алешей сегодня на иксбоксе рубились, потом в маке поели, потом ему новый телефон купили, и два часа с горок в Нескучном саду катались."],
  ["zloy-zloy", "У Алеши завтра день рождения."],
  ["zloy-zloy", "Он мой дед. Ему будет 81 год."],
  ["Вы", "LOL"]
];

let newMessages = [];

for(message of messages){
    newMessages.push({
        author: message[0],
        text: message[1]
    });
}

console.log(newMessages);

// Пользователь мессенджера хочет общаться со всеми своими друзьями, а мы не учитывали этого раньше — чат у нас может быть только один. Давайте исправим это. Добавим в ассоциативный массив с информацией о пользователе список чатов и сообщений в этих чатах. Для этого мы добавим новый ключ chats в объект user из первого задания. В качестве значения для ключа chats установите новый ассоциативный массив. В этом ассоциативном массиве мы будем хранить список чатов. В качестве ключа будем использовать имя собеседника, а в качестве значения — массив сообщений.
let user = {
    name: 'Лев Толстой',
    login: 'leo_tolstoy',
    reputation: 97,
    total: 900,
    chats: {}
}

user.chats.mama = [
    { author: "mama", text: "Ты покушал?" },
    { author: "mama", text: "Почему не отвечаешь?" },
    { author: "вы", text: "Покушал, мам" },
];

user.chats.wife = [
  {author: "вы", text: "Устал и загрустил"},
  {author: "вы", text: "Ленюсь"},
  {author: "wife", text: "zzz"},
]

for(chat of user.chats.wife){
    console.log(`${chat.author}: ${chat.text}`);
}

//В конце страницы форума нужно отображать информацию о текущей версии. Создадим функцию, которая будет печатать эту информацию.
function about(){
    let version = "Forum Netology, 1.0.";
    console.log(version);
}

about();

// Информация об авторизованном пользователе хранится в глобальном объекте user. Напишите функцию, которая будет печатать список сообщений для пользователя.
let user = {
    name: "Иван Иванов",
    login: "killer504",
    reputation: 97,
    messages: [
      {from: "administrator", text: "Вы получили предупреждение за публикацию рекламы на форуме"},
      {from: "Пётр", text: "Собираем встречу в субботу в 19:00. Придёшь?"},
      {from: "administrator", text: "Ваш рейтинг был повышен пользователем DonkeyKong"},
      {from: "administrator", text: "Ваш рейтинг был повышен пользователем Netologist"},
      {from: "Brian Kerninghan", text: "hello, world"}
    ]
};

function getMessages(){
    console.log(`Всего сообщений: ${user.messages.length}`);
    for(message of user.messages){
        console.log(`${message.from} | ${message.text}`);
    }
}

getMessages();

// Пользуясь переменной user из задания “Вывод сообщений из объекта”, напишите функцию printChatUsers, которая выведет список собеседников в переписке. Имена не должны повторяться.
 let user = {
    name: 'Мистер дудец',
    login: 'mrdudec',
    reputation: 15,
    messages: [
        {from: 'administrator', text: 'Вы получили предупреждение за публикацию рекламы на форуме'},
        {from: 'Пётр', text: 'Собираем встречу в субботу в 19:00. Придёшь?'},
        {from: 'administrator', text: 'Ваш рейтинг был повышен пользователем DonkeyKong'},
        {from: 'administrator', text: 'Ваш рейтинг был повышен пользователем Netologist'},
        {from: 'Brian Kerninghan', text: 'hello, world'}
    ]
};

function printChatUsers(){
    let usersChat = [];
    for(message of user.messages){
        if(!usersChat.includes(message.from)){
            usersChat.push(message.from);
        }
    }
    console.log(`В чате пользователей: ${usersChat.length}`);
    console.log(`Вот они: ${usersChat.join(", ")}`);
}

printChatUsers();
